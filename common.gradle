apply plugin: 'java'
apply plugin: 'maven'

String mavenGroupId = 'com.openle.module'
String mavenVersion = '1.0.9'

// android编译器只支持到jdk8
//sourceCompatibility = JavaVersion.VERSION_1_9
sourceCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral();
}

String mavenArtifactId = name

group = mavenGroupId
version = mavenVersion

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId = mavenGroupId
        artifactId = mavenArtifactId
        version = mavenVersion
    }
}

task createFolders(description: 'Creates the source folders if they do not exist.') doLast {
    sourceSets*.allSource*.srcDirs*.each { File srcDir ->
        if (!srcDir.isDirectory()) {
            println "Creating source folder: ${srcDir}"
            srcDir.mkdirs()
        }
    }
}

// for wxd


// 兼容中文注释和排除module-info.java
tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    title =title+" - Open Source"
    excludes = ['module-info.java','**/xxx/**']
    //failOnError = false
    //options.addStringOption('Xdoclint:none', '-quiet')
}

configurations {
    deployerJars
}

dependencies {
    deployerJars group: 'org.apache.maven.wagon', name: 'wagon-webdav-jackrabbit', version: '3.2.0'
}

task snapshot(dependsOn:assemble) << {
    uploadArchives.execute()
}
gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(snapshot)) {
        version = version+'-SNAPSHOT'
        println version
    }
}

project.ext.pwd = project.hasProperty('WEBDAV_PASSWORD') ? project.property('WEBDAV_PASSWORD') : System.getenv('WEBDAV_PASSWORD')
apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        pom.artifactId = project.archivesBaseName.toLowerCase()
        configuration = configurations.deployerJars
            
        //  or project.repositories["MavenLocal"].url
        repository(url: project.repositories.mavenLocal().url)
        snapshotRepository(url: project.repositories.mavenLocal().url.resolve("../snapshots"))

        //  覆盖上个repository;
        repository(url: "dav:https://maven.openle.com/releases/") {
            authentication(userName: "webdav", password: project.ext.pwd)
        }
        snapshotRepository(url: "dav:https://maven.openle.com/snapshots/") {
            authentication(userName: "webdav", password: project.ext.pwd)
        }
        
    }
}
