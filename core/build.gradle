plugins {
    id 'java-library'
    id "com.jfrog.bintray" version "1.8.5"  //  for release
    //    id 'signing'
}

// Android编译器只支持到JDK8
compileJava {
    //  会覆盖sourceCompatibility
    options.release = 8
}


sourceSets {
    java11 {
        java {
            srcDirs = ['src/main/java11']
        }
    }
}
compileJava11Java {
    options.release = 11
}
jar {
    manifest {
        attributes("Multi-Release": true)
    }    
    into('META-INF/versions/11') {
        from sourceSets.java11.output
    }
}


test {
    useJUnitPlatform()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    //  For <tt>
    exclude '**/IndentedPrintWriter.java'
    //exclude '**/ParameterParser.java'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    
    java11Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }

    //  测试api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    
    //  测试引擎
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}


//  注意 - 提交前应通过uploadArchives生成build/poms/目录
// ./gradlew build bintrayUpload -PBINTRAY_API_KEY=myKey  //or 设定环境变量: export BINTRAY_API_KEY=myKey
// gradle.properties: BINTRAY_USER=wangxiaodong
// compile 'com.openle.module:core:1.0.0'
project.ext.bUser = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
println project.ext.bUser
project.ext.bKey = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
bintray {
    user=project.ext.bUser
    key=project.ext.bKey
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/iwangxiaodong/open-java.git'
        version {
            //name = project.version.toString()
            desc = project.name
        }
    }
}

//  即使不调用bintrayUpload任务，依然会设置环境变量，故用的时候去掉注释
//task initProperty {
//    System.setProperty("http.proxyHost", "127.0.0.1")
//    System.setProperty("http.proxyPort", "1080")
//    System.setProperty("https.proxyHost", "127.0.0.1")
//    System.setProperty("https.proxyPort", "1080")
//}
//tasks.bintrayUpload.dependsOn(initProperty)
//  uploadArchives仅用于生成POM，供bintrayUpload上传
tasks.bintrayUpload.dependsOn(uploadArchives) //.dependsOn(jar,sourcesJar,javadocJar)


//jar {  
// 解决MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)
// 也可以在android配置中通过Proguard删除未使用的代码
//exclude('com/openle/module/core/lambda/LambdaFactory**')
    
//exclude('my/package/excluded/**')  
//}

// common.gradle已存在该task
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.java.srcDirs
//}

//compileJava {
//    doFirst {
//        options.compilerArgs = [
//                    '--module-path', classpath.asPath,
//        ]
//        classpath = files()
//    }
//}

//signing {
//    sign configurations.archives
//}