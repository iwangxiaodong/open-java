plugins {
    id 'java-library'
    id("maven-publish")
    id "com.google.cloud.artifactregistry.gradle-plugin" version "2.1.5"

    //    id 'signing'
}

// Android编译器只支持到JDK11
compileJava {
    //  会覆盖sourceCompatibility
    options.release = 11
}

sourceSets {
    javaSecond {
        java {
            srcDirs = ['src/main/javaSecond']
        }
    }
}
compileJavaSecondJava {
    options.release = 12
}
jar {
    manifest {
        attributes("Multi-Release": true)
        attributes("Implementation-Title": "Open-Java",
                   "Implementation-Version": archiveVersion)
    }
    into('META-INF/versions/12') {
        from sourceSets.javaSecond.output
    }
}

test {
    useJUnitPlatform()
}

dependencies {    
    javaSecondImplementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }

    //  测试api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'    
    //  测试引擎
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}
publishing {
    repositories {
        maven {
            url "artifactregistry://asia-maven.pkg.dev/project-161922/maven-public-snapshot"
            credentials {
                username = "_json_key"  //  key.json内容直转为base64后用_json_key_base64
                password = file('../../project-161922-8ad030ce3d3e.json').text
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
        /*
        maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/iwangxiaodong/open-java")
        credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
        password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
        }*/
    }
    publications {
        mainRelease(MavenPublication) {
            from(components.java)
            //groupId = group
            //artifactId = name
            //version = version
        }
    }
}
javadoc {
    options.encoding = 'UTF-8'
}